{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ball.js","webpack:///./src/entry.js","webpack:///./src/player.js","webpack:///./src/pong.js","webpack:///./src/rectangle.js","webpack:///./src/vector.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAA8B;AACM;;AAEpC,mBAAmB,kDAAS;AAC5B;AACA;AACA,4BAA4B,+CAAM;AAClC;AACA;;AAEe,mEAAI,E;;;;;;;;;;;;ACVnB;AAAA;AAA0B;;AAE1B;AACA,iBAAiB,6CAAI;;AAErB;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC,E;;;;;;;;;;;;ACXD;AAAA;AAAoC;;AAEpC,qBAAqB,kDAAS;AAC9B;AACA;AACA;AACA;AACA;;AAEe,qEAAM,E;;;;;;;;;;;;ACTrB;AAAA;AAAA;AAA8B;AACJ;;AAE1B;AACA;AACA;AACA;AACA;AACA,0BAA0B,6CAAI,QAAQ,6CAAI,QAAQ,6CAAI,QAAQ,6CAAI,QAAQ,6CAAI,QAAQ,6CAAI,QAAQ,6CAAI,QAAQ,6CAAI,QAAQ,6CAAI,QAAQ,6CAAI;AAC1I,4BAA4B,+CAAM,QAAQ,+CAAM;AAChD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS,E;;AAET;AACA;AACA;AACA;AACA;;AAEe,mEAAI,E;;;;;;;;;;;;ACxHnB;AAAA;AAA8B;;AAE9B;AACA;AACA,uBAAuB,+CAAM;AAC7B,wBAAwB,+CAAM;AAC9B;AACA;AACA;AACA,K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,wEAAS,E;;;;;;;;;;;;ACrBxB;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEe,qEAAM,E","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/entry.js\");\n","import Vector from './vector';\nimport Rectangle from './rectangle';\n\nclass Ball extends Rectangle {\n    constructor() {\n        super(10, 10);\n        this.velocity = new Vector();\n    }\n}\n\nexport default Ball;","import Pong from './pong';\n\nconst canvas = document.getElementById('pong');\nconst pong = new Pong(canvas);\n\ncanvas.addEventListener('mousemove', event => {\n    pong.players[0].pos.y = event.offsetY;\n});\n\ncanvas.addEventListener('click', event => {\n    pong.start();\n});","import Rectangle from './rectangle';\n\nclass Player extends Rectangle {\n    constructor() {\n        super(20, 100);\n        this.score = 0;\n    }\n}\n\nexport default Player;","import Player from './player';\nimport Ball from './ball';\n\nclass Pong {\n    constructor(canvas) {\n        this._canvas = canvas;\n        this._context = canvas.getContext('2d');\n        this.colors = [\"#FF355E\", \"#FF6037\", \"#FFFF66\", '#FFCC33', '#66FF66', '#AAF0D1', '#50BFE6', '#FF6EFF', '#FF00CC', \"#fff\"];\n        this.balls = [new Ball(), new Ball(), new Ball(), new Ball(), new Ball(), new Ball(), new Ball(), new Ball(), new Ball(), new Ball()];\n        this.players = [new Player(), new Player()];\n        this.players[0].pos.x = 40;\n        this.players[1].pos.x = this._canvas.width - 40;\n        this.players.forEach(player => {\n            player.pos.y = this._canvas.height/2;\n        });\n        let lastTime;\n        const requestAnimationFrameCallback = milliseconds => {\n            if (lastTime) {\n                this.update((milliseconds - lastTime)/1000);\n            }\n            lastTime = milliseconds;\n            requestAnimationFrame(requestAnimationFrameCallback);\n        };\n        requestAnimationFrameCallback();\n        this.resetAllBalls();\n    }\n\n    collide(player, ball) {\n        if (player.left < ball.right && player.right > ball.left && player.top < ball.bottom && player.bottom > ball.top) {\n            ball.velocity.x = -1 * ball.velocity.x;\n            const ballToChange = this.balls[this.balls.indexOf(ball)];\n            ballToChange.velocity.y *= 1.02;\n            ballToChange.velocity.x *= 1.02;\n        }\n    }\n\n    draw() {\n        this._context.fillStyle = 'rgba(0, 0, 0, 0.06)';\n        this._context.fillRect(0, 0, this._canvas.width, this._canvas.height);\n        this.balls.forEach((ball, i) => this.drawRect(ball, this.colors[i]));\n        this.players.forEach(player => this.drawRect(player, \"#fff\"));\n    }\n\n    drawRect(rect, color) {\n        this._context.fillStyle = color;\n        this._context.fillRect(rect.left, rect.top, rect.size.x, rect.size.y);\n    }\n\n    resetAllBalls() {\n        this.balls.forEach(ball => {\n            ball.pos.x = this._canvas.width/2;\n            ball.pos.y = this._canvas.height/2;\n            ball.velocity.x = 0;\n            ball.velocity.y = 0;\n        });\n    }\n\n    returnRandomSpeed() {\n        return ((Math.random() * 200) + 50) * (Math.random() > 0.5 ? 1 : -1);\n    }\n\n    resetOneBall(ball) {\n        const i = this.balls.indexOf(ball);\n        this.balls[i].pos.x = this._canvas.width/2;\n        this.balls[i].pos.y = this._canvas.height/2;\n        this.balls[i].velocity.x = this.returnRandomSpeed();\n        this.balls[i].velocity.y = this.returnRandomSpeed();\n    }\n\n    start() {\n        this.players.forEach(player => player.score = 0);\n        this.balls.forEach(ball => {\n            if (ball.velocity.x === 0) {\n                ball.velocity.x = this.returnRandomSpeed();\n                ball.velocity.y = this.returnRandomSpeed();\n            }\n        });\n    }\n\n    updateScore() {\n        document.getElementById('p1_score').innerText = this.players[0].score;\n        document.getElementById('p2_score').innerText = this.players[1].score;\n    }\n\n    changeAIPos(ball) {\n        this.players[1].pos.y = (this.players[1].pos.y + ball.pos.y)/2;\n    }\n\n    update(changeTime) {\n        let chasingBall = this.balls[0];\n        this.balls.forEach(ball => {\n            if ((ball.velocity.x > 220 && ball.velocity.x < 350) || (ball.pos.x > chasingBall.pos.x && ball.velocity.x < chasingBall.velocity.x)) {\n                chasingBall = ball;\n            }\n\n            ball.pos.x += ball.velocity.x * changeTime;\n            ball.pos.y += ball.velocity.y * changeTime;\n\n            if (ball.left < 0 || ball.right > this._canvas.width) {\n                const playerId = ball.velocity.x < 0 | 0;\n                this.players[playerId].score++;\n                this.resetOneBall(ball);\n            }\n            if (ball.top < 0 || ball.bottom > this._canvas.height) {\n                ball.velocity.y = -1 * ball.velocity.y;\n            }\n            this.players.forEach(player => {\n                this.collide(player, ball);\n                if (player.score > 49) {\n                    this.resetAllBalls();\n                }\n            });\n        });  \n\n        this.updateScore();\n        this.changeAIPos(chasingBall);\n        this.draw();\n    }\n}\n\nexport default Pong;","import Vector from './vector';\n\nclass Rectangle {\n    constructor(w, h) {\n        this.pos = new Vector();\n        this.size = new Vector(w, h);\n    }\n    get left() {\n        return (this.pos.x - this.size.x/2);\n    } \n    get right() {\n        return (this.pos.x + this.size.x/2);\n    }\n    get top() {\n        return (this.pos.y - this.size.y/2);\n    }\n    get bottom() {\n        return (this.pos.y + this.size.y/2);\n    }\n}\n\nexport default Rectangle;","class Vector {\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n    }\n}\n\nexport default Vector;"],"sourceRoot":""}